$steps: (0,10,20,30,40,50,60,70,80,90,100);

@mixin colors-template($scheme, $name, $base-color) {

  .chayns-color--#{$scheme} {

   .tapp a {
      color: $base-color;
    }

    .ccs {
      @each $step in $steps {
        &__color--#{$step} {
          color: mix($base-color, white, $step);
        }
        &__background-color--#{$step} {
          background-color: mix($base-color, white, $step);
          color: if($step <= 60, black, white);
        }
        &__border-color--#{$step} {
          border-color: mix($base-color, white, $step)!important;// has to override existing or non-existing border properties
        }
      }
    }
  }

  @each $step in $steps {
    .#{$name}__color--#{$step} {
      color: mix($base-color, white, $step)!important; // has to override nested color classes (e.g. h1, h2 etc)
    }
    .#{$name}__background-color--#{$step} {
      background-color: mix($base-color, white, $step);
      color: if($step <= 60, black, white);
    }
    .#{$name}__border-color--#{$step} {
      border-color: mix($base-color, white, $step)!important;
    }
  }

}


@each $color-scheme in $color-schemes {
  $scheme: nth($color-scheme, 1);
  $name: nth($color-scheme, 2);
  $color: nth($color-scheme, 3);
  @include colors-template($scheme, $name, $color);
}
